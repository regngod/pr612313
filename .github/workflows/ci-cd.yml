name: prac7

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install psycopg2-binary
          pip install pytest

      - name: Prepare for tests (compose up)
        run: docker compose up -d --build

      - name: Wait services to start
        run: sleep 10

      - name: Run integration test
        run: python tests/integration.py


      - name: Run component test
        run: python tests/component.py


      - name: Clean up (compose down)
        run: docker compose down
  build-and-push-to-dh:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
          docker buildx create --use
          docker buildx inspect
          docker buildx build --platform linux/amd64,linux/arm64 -t renggod/prac7:latest -t renggod/prac7:${{ github.sha }} --push -f delivery_service/Dockerfile .

  build-and-push-yc:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build -f ../pr612313/payment_service/Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/service_payment_service:latest ../pr612313  

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag YC Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/service_payment_service:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-and-push-yc]
    steps:
    - name: Deploy serverless container
      uses: yc-actions/yc-sls-container-deploy@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
        container-name: ${{ secrets.YC_CONTAINER_NAME }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/service_payment_service:latest
        revision-service-account-id: ${{ secrets.YC_SA_ID }}